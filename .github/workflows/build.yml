name: Build
on:
  push:
    branches:
    - main
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
    - closed
    branches:
    - main
env:
  IS_RELEASE_CANDIDATE: >-
    ${{
      (
        github.event_name == 'pull_request' && 
        startsWith(github.event.pull_request.title, 'RELEASES:') && 
        contains(github.event.pull_request.labels.*.name, 'RELEASES')
      )
      ||
      (
        github.event_name == 'push' && 
        startsWith(github.event.head_commit.message, 'RELEASES:') && 
        startsWith(github.ref_name, 'RELEASE')
      )
    }}
jobs:
  label:
    runs-on: ubuntu-latest
    steps:
    - name: Apply Label
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.PAT_FOR_TAGGING }}
        script: |-
          if (!context.payload.pull_request) {
            console.log('Not a pull request, skipping label application');
            return;
          }

          const prefixes = [
            'INFRA:',
            'PROVISIONS:',
            'RELEASES:',
            'DATA:',
            'BROKERS:',
            'FOUNDATIONS:',
            'PROCESSINGS:',
            'ORCHESTRATIONS:',
            'COORDINATIONS:',
            'MANAGEMENTS:',
            'AGGREGATIONS:',
            'CONTROLLERS:',
            'CLIENTS:',
            'EXPOSERS:',
            'PROVIDERS:',
            'BASE:',
            'COMPONENTS:',
            'VIEWS:',
            'PAGES:',
            'ACCEPTANCE:',
            'INTEGRATIONS:',
            'CODE RUB:',
            'MINOR FIX:',
            'MEDIUM FIX:',
            'MAJOR FIX:',
            'DOCUMENTATION:',
            'CONFIG:',
            'STANDARD:',
            'DESIGN:',
            'BUSINESS:'
          ];

          const title = context.payload.pull_request.title;
          const existingLabels = context.payload.pull_request.labels.map(label => label.name);

          for (const prefix of prefixes) {
            if (title.startsWith(prefix)) {
              const label = prefix.slice(0, -1);
              if (!existingLabels.includes(label)) {
                console.log(`Applying label: ${label}`);
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  labels: [label]
                });
              }
              break;
            }
          }
  # ... rest of your workflow ...
